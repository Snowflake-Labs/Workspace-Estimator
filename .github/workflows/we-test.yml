name: Test Package [workspace_extractor]

on:
  workflow_call:

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    name: Unit Test ${{ matrix.download_name }}-${{ matrix.python-version }}-${{ matrix.cloud-provider }}
    runs-on: ${{ matrix.os }}
    env:
      PYTHON_VERSION: ${{ matrix.python-version }}
      COVERAGE_THRESHOLD: 28
      HATCH_PYTHON: ${{ matrix.python-version }}
      HATCH_ENV_NAME: workspace_extractor

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python-version: "3.10"
            cloud-provider: aws
            download_name: linux
          - os: ubuntu-latest
            python-version: "3.11"
            cloud-provider: aws
            download_name: linux

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install required tools

        run: |
          python -m pip install --upgrade pip -q
          python -m pip install ".[development]"
          pip install hatch -q
          pip list
        working-directory: ${{ github.workspace }}/DBX/workspace_extractor_package


      - name: Run Unit Tests
        id: run-tests
        run: |
          echo "Current working directory: $PWD"
          echo "Python executable being used: $(which python)"
          python --version
          echo "HATCH_PYTHON: $HATCH_PYTHON"

          # Configure hatch
          hatch config set dirs.env.virtual .hatch
          hatch status && hatch env show

          # Get the Python version for hatch matrix
          PYTHON_VERSION="${{ matrix.python-version }}"
          echo "Using Python version: $PYTHON_VERSION"

          # Set environment variables
          export PYTHON_VERSION=$PYTHON_VERSION

          # Run tests and coverage
          echo "Running tests with Python $PYTHON_VERSION"
          echo "Using coverage threshold: $COVERAGE_THRESHOLD"
          hatch run test:check
          hatch run test:coverage
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
          PYTEST_ADDOPTS: --color=yes --tb=short -v
        shell: bash
        working-directory: ${{ github.workspace }}/DBX/workspace_extractor_package
